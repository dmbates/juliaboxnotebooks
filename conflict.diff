diff --git a/.ipynb_checkpoints/StanVectorOne-checkpoint.ipynb b/.ipynb_checkpoints/StanVectorOne-checkpoint.ipynb
index 261aa8c..01c51bd 100644
--- a/.ipynb_checkpoints/StanVectorOne-checkpoint.ipynb
+++ b/.ipynb_checkpoints/StanVectorOne-checkpoint.ipynb
@@ -24,7 +24,10 @@
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "INFO: Nothing to be done\n",
+      "INFO: Cloning cache of MixedModels from git://github.com/dmbates/MixedModels.jl.git\n",
+      "INFO: Installing MixedModels v0.3.20\n",
+      "INFO: Building NLopt\n",
+      "INFO: Package database updated\n",
       "INFO: METADATA is out-of-date — you may not have the latest version of MixedModels\n",
       "INFO: Use `Pkg.update()` to get the latest versions of your packages\n"
      ]
@@ -36,26 +39,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 3,
    "metadata": {
     "collapsed": false
    },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Environment variable JULIA_SVG_BROWSER not found.\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "using DataFrames,Stan,Mamba,RDatasets,MixedModels"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 4,
    "metadata": {
     "collapsed": false
    },
@@ -95,7 +90,7 @@
        "| 180 | 364.124  | 9    | \"372\"   |"
       ]
      },
-     "execution_count": 3,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -113,7 +108,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 5,
    "metadata": {
     "collapsed": false
    },
@@ -139,7 +134,7 @@
        "Days          10.4673   1.50224 6.96779\n"
       ]
      },
-     "execution_count": 4,
+     "execution_count": 5,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -157,7 +152,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 6,
    "metadata": {
     "collapsed": false
    },
@@ -166,7 +161,7 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "elapsed time: 0.008524628 seconds (1784296 bytes allocated)\n"
+      "elapsed time: 0.008640419 seconds (1784296 bytes allocated)\n"
      ]
     }
    ],
@@ -215,7 +210,7 @@
     "  int<lower=1>  M; // num subjects\n",
     "  int<lower=1>  J; // length of individual vector-valued random effects\n",
     "  int<lower=1,upper=M> subj[N]; // subject indicator\n",
-    "  matrix[N,K]   X; // model matrix for fixed-effects parameters\n",
+    "  row_vector[K] X[N]; // model matrix for fixed-effects parameters\n",
     "  row_vector[J] Z[N]; // generator model matrix for random-effects\n",
     "  vector[N]     y; // response vector (reaction time)\n",
     "}\n",
@@ -223,17 +218,12 @@
     "parameters {\n",
     "  cholesky_factor_corr[J] L; // Cholesky factor of unconditional correlation of random effects\n",
     "vector<lower=0>[J] tau;  // relative standard deviations of unconditional distribution of random effects\n",
-    "  vector[J] u[M]; // spherical random effects\n",
     "  vector[K] beta; // fixed-effects\n",
     "  real<lower=0> sigma; // standard deviation of response given random effects\n",
     "}\n",
     "\n",
     "transformed parameters {\n",
-    "  matrix[J,J] Lambda; \n",
     "  matrix[J,J] corr;\n",
-    "  vector[J] b[M];\n",
-    "  vector[N] muX;\n",
-    "  vector[N] mu;\n",
     "  corr <- tcrossprod(L);  // for monitoring the correlations\n",
     "  Lambda <- diag_pre_multiply(tau,L);\n",
     "  for (m in 1:M)\n",
@@ -244,11 +234,19 @@
     "}\n",
     "\n",
     "model {\n",
+    "  matrix[J,J] Lambda; \n",
+    "  vector[N] muX;\n",
+    "  vector[N] mu;\n",
+    "  vector[J] b[M];\n",
+    "  vector[J] u[M];   // spherical random effects\n",
     "  tau ~ cauchy(0,2.5);\n",
     "  L ~ lkj_corr_cholesky(2);\n",
-    "  for (m in 1:M)\n",
-    "    u[m] ~ normal(0,sigma);\n",
-    "  y ~ normal(mu, sigma);\n",
+    "  for (m in 1:M) {\n",
+    "    u[m] ~ normal(0,1);\n",
+    "    b[m] <- Lambda * u[m];\n",
+    "  }\n",
+    "  for (n in 1:N)\n",
+    "y[n] ~ normal(mu, sigma);\n",
     "}\n",
     "\"\"\";"
    ]
diff --git a/StanVectorOne.ipynb b/StanVectorOne.ipynb
index 261aa8c..01c51bd 100644
--- a/StanVectorOne.ipynb
+++ b/StanVectorOne.ipynb
@@ -24,7 +24,10 @@
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "INFO: Nothing to be done\n",
+      "INFO: Cloning cache of MixedModels from git://github.com/dmbates/MixedModels.jl.git\n",
+      "INFO: Installing MixedModels v0.3.20\n",
+      "INFO: Building NLopt\n",
+      "INFO: Package database updated\n",
       "INFO: METADATA is out-of-date — you may not have the latest version of MixedModels\n",
       "INFO: Use `Pkg.update()` to get the latest versions of your packages\n"
      ]
@@ -36,26 +39,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 3,
    "metadata": {
     "collapsed": false
    },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Environment variable JULIA_SVG_BROWSER not found.\n"
-     ]
-    }
-   ],
+   "outputs": [],
    "source": [
     "using DataFrames,Stan,Mamba,RDatasets,MixedModels"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 4,
    "metadata": {
     "collapsed": false
    },
@@ -95,7 +90,7 @@
        "| 180 | 364.124  | 9    | \"372\"   |"
       ]
      },
-     "execution_count": 3,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -113,7 +108,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 5,
    "metadata": {
     "collapsed": false
    },
@@ -139,7 +134,7 @@
        "Days          10.4673   1.50224 6.96779\n"
       ]
      },
-     "execution_count": 4,
+     "execution_count": 5,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -157,7 +152,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 6,
    "metadata": {
     "collapsed": false
    },
@@ -166,7 +161,7 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "elapsed time: 0.008524628 seconds (1784296 bytes allocated)\n"
+      "elapsed time: 0.008640419 seconds (1784296 bytes allocated)\n"
      ]
     }
    ],
@@ -215,7 +210,7 @@
     "  int<lower=1>  M; // num subjects\n",
     "  int<lower=1>  J; // length of individual vector-valued random effects\n",
     "  int<lower=1,upper=M> subj[N]; // subject indicator\n",
-    "  matrix[N,K]   X; // model matrix for fixed-effects parameters\n",
+    "  row_vector[K] X[N]; // model matrix for fixed-effects parameters\n",
     "  row_vector[J] Z[N]; // generator model matrix for random-effects\n",
     "  vector[N]     y; // response vector (reaction time)\n",
     "}\n",
@@ -223,17 +218,12 @@
     "parameters {\n",
     "  cholesky_factor_corr[J] L; // Cholesky factor of unconditional correlation of random effects\n",
     "vector<lower=0>[J] tau;  // relative standard deviations of unconditional distribution of random effects\n",
-    "  vector[J] u[M]; // spherical random effects\n",
     "  vector[K] beta; // fixed-effects\n",
     "  real<lower=0> sigma; // standard deviation of response given random effects\n",
     "}\n",
     "\n",
     "transformed parameters {\n",
-    "  matrix[J,J] Lambda; \n",
     "  matrix[J,J] corr;\n",
-    "  vector[J] b[M];\n",
-    "  vector[N] muX;\n",
-    "  vector[N] mu;\n",
     "  corr <- tcrossprod(L);  // for monitoring the correlations\n",
     "  Lambda <- diag_pre_multiply(tau,L);\n",
     "  for (m in 1:M)\n",
@@ -244,11 +234,19 @@
     "}\n",
     "\n",
     "model {\n",
+    "  matrix[J,J] Lambda; \n",
+    "  vector[N] muX;\n",
+    "  vector[N] mu;\n",
+    "  vector[J] b[M];\n",
+    "  vector[J] u[M];   // spherical random effects\n",
     "  tau ~ cauchy(0,2.5);\n",
     "  L ~ lkj_corr_cholesky(2);\n",
-    "  for (m in 1:M)\n",
-    "    u[m] ~ normal(0,sigma);\n",
-    "  y ~ normal(mu, sigma);\n",
+    "  for (m in 1:M) {\n",
+    "    u[m] ~ normal(0,1);\n",
+    "    b[m] <- Lambda * u[m];\n",
+    "  }\n",
+    "  for (n in 1:N)\n",
+    "y[n] ~ normal(mu, sigma);\n",
     "}\n",
     "\"\"\";"
    ]